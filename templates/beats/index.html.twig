{% extends 'base.html.twig' %}

{% block title %}Instrumental{% endblock %}

{% block body %}
<h1>Beats</h1>
    <nav class="navbar navbar-expand navbar-light btn-style">
    <div class="container-fluid">
        <div class="d-flex justify-content-center collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mb-2 mb-lg-0 d-flex flex-wrap fw-bold">
            <li class="nav-item">
                <a class="nav-link active" href="{{path('instrumental')}}">Tous</a>
            </li>
            {% if category is not null and category|length > 0 %}
            {% for categorie in category %}
            <li class="nav-item">
                <a class="nav-link active" href="{{path('category', {'id': categorie.id} )}}">{{categorie.name}}</a>
            </li>
            {% endfor %}
        {% endif %}
        </ul>
        </div>
    </div>
    </nav>
    <div class="row d-flex flex-wrap justify-content-around">
        {% if beats|length > 0 %}
            {% for beat in beats %}
                <div class="d-flex flex-wrap justify-content-center flex-column align-items-center audio-responsive">
                        <div class="audio-container">
                            <div class="audio-info btn-style">
                                <h4 class="text-center">{{beat.name}}</h4>
                                {# <div class="progress-container d-flex flex-column">
                                    <div class="progress"></div>
                                    <div class="d-flex flex-row justify-content-between"><small class="start-time"></small><small class="end-time"></small></div>
                                </div> #}
                            </div>
                            <audio src="{{asset('uploads/beats/' ~ beat.beatName)}}" class="song" data-playing="false" preload="metadata" data-Id={{beat.id}}></audio>
                            <div class="img-container">
                                <a href="{{path('instrumental-info', {id: beat.id})}}"><img src="{{asset('uploads/images/' ~ beat.imageName)}}" alt="music-cover" class="img-cover"></a>
                            </div>
                            <div class="navigation">
                                <button class="action-btn">
                                    <i class="fas fa-backward"></i>
                                </button>
                                <button class="action-btn action-btn-big bt-play">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                        </div>
                        <div class="d-flex justify-content-around mb-3">
                            <h3 class="me-5">{{beat.price ~ '€'}}</h3>
                            <a href="{{path('userView', {id: beat.user.id})}}"><img src="{{asset('images/artiste2.ico')}}" alt="prod by {{beat.user}}" class="img-basket"></a>
                            {% if app.user %}
                                {% if beat in panier.beats %}
                                    <p class="text-center">Déja dans le panier</p>
                                {% else %}
                                    <img src="{{asset('images/shopping-basket.png')}}" alt="Ajouter au panier" class="cart img-basket ms-5" data-id="{{beat.id}}">
                                {% endif %}
                            {% else %}
                                <img src="{{asset('images/shopping-basket.png')}}" alt="Ajouter au panier" class="cart img-basket ms-5" data-id="{{beat.id}}">
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}
            {% else %}
            <p class="fw-bold text-center mt-4">No BEATS</p>
        {% endif %}
    </div>
{% endblock %}
{% block javascripts %}
<script>
var currentPlayer = null;
{# var progress = $('.progress'); #}

{# function initProgressBar(){
    var player = $(".song");
    $(player).add("timeupdate", timeCalc());
}
function timeCalc(){
    var player = $(".song");
    var play = $(".audio-container");
    var progress = $(play).find('.progress');
    var width = $(progress).width();
    var length = player.duration;
    var current_time = player.currentTime;
    var totalLength = calculateTotalValue(length);
    $(".end-time").html(totalLength);
    var currentTime = calculateCurrentValue(current_time);
    $(".start-time").html(currentTime);
    progress.style.marginLeft = width * (player.currentTime / player.duration) + "px";
}

function calculateTotalValue(length) {
    var minutes = Math.floor(length / 60);
    var  seconds_int = length - minutes * 60;
    if(seconds_int < 10){
    //console.info("here");
    seconds_int = "0"+seconds_int;
    //console.info(seconds_int);
    }
    var seconds_str = seconds_int.toString();
    var  seconds = seconds_str.substr(0, 2);
    var time = minutes + ':' + seconds;
//console.info(seconds_int)
    return time;
}
function calculateCurrentValue(currentTime) {
    var current_hour = parseInt(currentTime / 3600) % 24,
        current_minute = parseInt(currentTime / 60) % 60,
        current_seconds_long = currentTime % 60,
        current_seconds = current_seconds_long.toFixed(),
        current_time = (current_minute < 10 ? "0" + current_minute : current_minute) + ":" + (current_seconds < 10 ? "0" + current_seconds : current_seconds);
    return current_time;
} #}

$(".bt-play").on("click", function(){
    var player = $(this).parent().parent().find(".song");
    var play = $(this).parent().parent();

    if($(player).attr("data-playing")=="false"){
        //console.log(currentPlayer);
        //if($(player)!= $(currentPlayer)){
            $(".song").each(function(){
                $(this).get(0).pause();
                $(this).attr("data-playing", "false");
                $(this)[0].currentTime = 0;
            });
        //}
        
        $(play).addClass("play");
        $(player).add('loadedmetadata', function(_event){
            var duration = $(player).duration;
            console.log(duration);
        });
        $(this).find("i").removeClass('fa-play');
        $(this).find("i").addClass('fa-pause');
        currentPlayer = $(player);
        $(player).attr("data-playing", "true");
        $(player).get(0).play();
        var progress = $(play).find('.progress');
        progress.css("width", "0");
        //console.log(totalLength);
        //var ratio = X / progress.width();
        //var newCurrentTime = ratio * duration;
        //var offset = progress.offset();
        //player.currentTime = newCurrentTime;
        //$(player).add('timeupdate', function() {
        //    $('.progress').width(player.currenTime);
        //});
    }else{
        $(player).attr("data-playing", "false");
        $(player).get(0).pause();
        $(play).removeClass("play");
        $(this).find("i").addClass('fa-play');
        $(this).find("i").removeClass('fa-pause');
    }
});

{# var offset = $div.offset();
    var x = ev.clientX - offset.left;

    $('.progress').width(x); #}
{# function updateProgress(e){
    var {duration, currentTime} = event.target;
    var progressPercent = (currentTime / duration) * 100;
    progress.style.width = `${progressPercent}%` ;
} #}
var basket = $('.cart');
basket.each(function(){
    $(this).click(function() {
    var dataId = $(this).attr('data-id');
        $.ajax({
                type: "POST",
                dataType:"json",
                url: "{{ path('ajoutPanier') }}" ,
                data: {"id":dataId},
                
        }).done(function(response){
            console.log(response)
        $("img").each(function(){
            if($(this).data("id")==response){
                console.log(response);
                $(this).addClass("d-none");
                }
            });
        });
    });
});
</script>
{% endblock %}

{# https://www.solodev.com/blog/web-design/how-to-show-the-total-number-of-items-in-customer-shopping-carts.stml #}

{# var player1,onplayhead,playerId,timeline,playhead,timelineWidth;
jQuery(window).on("load", function () {
    audioPlay();
    ballSeek();

});

function audioPlay() {
    /*var player = document.getElementById("audio");*/
  var player = $("#audio")[0];
  //alert(player);
    player.play();
    initProgressBar();
    isPlaying = true;
}

function initProgressBar() {
  jQuery(".play-pause").empty().text("PAUSE");
    player1 = document.getElementById("audio");
    player1.addEventListener("timeupdate", timeCal);
    var playBtn = jQuery(".play-pause");
          playBtn.click(function() {
            if (player1.paused === false) {
                player1.pause();
                isPlaying = false;
              jQuery(".play-pause").empty().text("PLAY");

            } else {
                player1.play();
                isPlaying = true;
              jQuery(".play-pause").empty().text("PAUSE");
            }
          });

}

function timeCal() {
    var width = jQuery("#timeline1").width();
    var length = player1.duration;
    var current_time = player1.currentTime;

    // calculate total length of value
    var totalLength = calculateTotalValue(length);
  //console.info(totalLength);
    jQuery(".end-time").html(totalLength);

    // calculate current value time
    var currentTime = calculateCurrentValue(current_time);
    jQuery(".start-time").html(currentTime);

    var progressbar = document.getElementById("seekObj1");
    progressbar.style.marginLeft = width * (player1.currentTime / player1.duration) + "px";

}

function calculateTotalValue(length) {
    var minutes = Math.floor(length / 60);
      var  seconds_int = length - minutes * 60;
  if(seconds_int < 10){
    //console.info("here");
    seconds_int = "0"+seconds_int;
    //console.info(seconds_int);
  }
      var seconds_str = seconds_int.toString();
       var  seconds = seconds_str.substr(0, 2);
        var time = minutes + ':' + seconds;
//console.info(seconds_int)
    return time;
}

function calculateCurrentValue(currentTime) {
    var current_hour = parseInt(currentTime / 3600) % 24,
        current_minute = parseInt(currentTime / 60) % 60,
        current_seconds_long = currentTime % 60,
        current_seconds = current_seconds_long.toFixed(),
        current_time = (current_minute < 10 ? "0" + current_minute : current_minute) + ":" + (current_seconds < 10 ? "0" + current_seconds : current_seconds);
    return current_time;
}

function ballSeek() {
     onplayhead = null;
     playerId = null;
     timeline = document.getElementById("timeline1");
     playhead = document.getElementById("seekObj1");
     timelineWidth = timeline.offsetWidth - playhead.offsetWidth;

    timeline.addEventListener("click", seek);
    playhead.addEventListener('mousedown', drag);
    window.addEventListener('mouseup', mouseUp);

}


function seek(event) {
    var player = document.getElementById("audio");
    player.currentTime = player.duration * clickPercent(event, timeline, timelineWidth);
}

function clickPercent(e, timeline, timelineWidth) {
    return (event.clientX - getPosition(timeline)) / timelineWidth;
}

function getPosition(el) {
    return el.getBoundingClientRect().left;
}

function drag(e) {
    player1.removeEventListener("timeupdate", timeCal);
    onplayhead = jQuery(this).attr("id");
    playerId = jQuery(this).parents("li").find("audio").attr("id");
    var player = document.getElementById(playerId);
    window.addEventListener('mousemove', dragFunc);
    player.removeEventListener('timeupdate', timeUpdate);
}


function dragFunc(e) {
    var player = document.getElementById(onplayhead);
    var newMargLeft = e.clientX - getPosition(timeline);

    if (newMargLeft >= 0 && newMargLeft <= timelineWidth) {
        playhead.style.marginLeft = newMargLeft + "px";
    }
    if (newMargLeft < 0) {
        playhead.style.marginLeft = "0px";
    }
    if (newMargLeft > timelineWidth) {
        playhead.style.marginLeft = timelineWidth + "px";
    }
}

function mouseUp(e) {
    if (onplayhead != null) {
        var player = document.getElementById(playerId);
        window.removeEventListener('mousemove', dragFunc);
        player.currentTime = player.duration * clickPercent(e, timeline, timelineWidth);
        player1.addEventListener("timeupdate", timeCal);
        player.addEventListener('timeupdate', timeUpdate);
    }
    onplayhead = null;
}

function timeUpdate() {
    var audio = document.getElementById(onplayhead);
    var player = document.getElementById(playerId);
    var playPercent = timelineWidth * (player.currentTime / player.duration);
    audio.style.marginLeft = playPercent + "px";
    // If song is over
    if (player.currentTime == player.duration) {
        player.pause();
    }

} #}